name: Build Test Lint

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
      - 'migrations/**'
      - 'scripts/**'
  #    paths:
  #      - none
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
      - 'migrations/**'
      - 'scripts/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache SQLx CLI
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          if ! command -v sqlx > /dev/null; then
            cargo install sqlx-cli --no-default-features --features native-tls,postgres
          else
            echo "SQLx CLI already installed."
          fi

      - name: Cache Clippy Output
        uses: actions/cache@v2
        with:
          path: target/clippy-cache
          key: ${{ runner.os }}-clippy-${{ hashFiles('**/*.rs', '**/Cargo.lock') }}

      - name: Cache Cargo Target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Database
        run: bash scripts/init_db.sh

      - name: Run tests
        run: cargo test --verbose

      - name: Check Linting
        run: cargo clippy --target-dir=target -- -D warnings

  deploy:
    runs-on: ubuntu-latest
    needs: [ build, format ]

    steps:
      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USER }}
          key: ${{ secrets.PI_SSH_KEY }}
          script: |
            cd /path/to/your/project
            git pull
            ./deploy_script.sh